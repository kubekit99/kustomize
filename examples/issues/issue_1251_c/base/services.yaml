apiVersion: v1
kind: Service
metadata:
  name: cockroachdb
  labels:
    app: cockroachdb
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    # Enable automatic monitoring of all instances when Prometheus is running in the cluster.
    prometheus.io/scrape: "true"
    prometheus.io/path: "_status/vars"
    prometheus.io/port: "8080"
spec:
  # The cockroadb service spec is identical to the cockroachdb-public except for one field: clusterIP
  # is forced to None. Kustomize will inline first the content of the cockroachdb-public service
  # spec field into the coackroachdb one. It will proceed normally.
  # The current example inlines trees between objects of the same kind but this is not a requirement.
  # The inlined variable could come for a user CRD/"catalog" which would allow sharing of complex trees.
  # For instance sharing a PodTemplate between multiple StatefulSet and adjusting it slightly in each
  # statefulset
  parent-inline: $(Service.cockroachdb-public.spec)
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  # This service is meant to be used by clients of the database. It exposes a ClusterIP that will
  # automatically load balance connections to the different database pods.
  name: cockroachdb-public
  labels:
    app: cockroachdb
spec:
  ports:
  # The main port, served by gRPC, serves Postgres-flavor SQL, internode
  # traffic and the cli.
  - port: 26257
    targetPort: 26257
    name: grpc
  # The secondary port serves the UI as well as health and debug endpoints.
  - port: $(CDB_HTTP_PORT)
    targetPort: $(CDB_HTTP_PORT)
    name: http
  selector:
    app: cockroachdb
